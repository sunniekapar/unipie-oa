
export default function Search({ data = [] }: { data: Location[] | [] }) {
  const { replace } = useRouter();
  const searchParams = useSearchParams();
  const pathname = usePathname();
  const [query, setQuery] = useState<string>('');
  const [search, setSearch] = useState<string>('');
  const [open, setOpen] = useState<boolean>(false);

  const handleSearch = useDebouncedCallback((value) => {
    const params = new URLSearchParams(searchParams);
    if (value) {
      params.set('query', value);
    } else {
      params.delete('query');
    }
    replace(`${pathname}?${params.toString()}`);
  }, 300);

  const handleChange = (value: string) => {
    setOpen(true);
    setQuery(value);
    setSearch(value);
    handleSearch(value);
  };

  const handleEnter = (event: KeyboardEvent<HTMLInputElement>) => {
    if (event.key != 'Enter') setOpen(false);
    else setQuery(data[0].name);
  };

  const handleClick = (location: Location) => {
    setQuery(setLocationForAPI(location));
    setOpen(false);
  };

  return (
    <section className="flex flex-col gap-6 relative">
      <Input
        value={search}
        onChange={(e) => handleChange(e.target.value)}
        onKeyDown={handleEnter}
      />

      {data.length > 0 && open ? (
        <div className="absolute top-12 w-full z-10 bg-background/60 backdrop-blur-sm rounded-b-lg">
          {data.map((location, index) => (
            <div
              onClick={() => handleClick(location)}
              key={index}
              className="flex justify-between items-center gap-1.5 px-4 py-2.5 group hover:bg-primary-foreground/90 hover:backdrop-blur-sm "
            >
              <div className="inline-flex flex-col">
                <p>{location.name}</p>
                <small className="text-primary/70 group-hover:text-primary/100 transition-all duration-300">
                  {location.state}
                </small>
              </div>
              <p>{location.country}</p>
            </div>
          ))}
        </div>
      ) : data.length === 0 ? (
        <small className="self-center text-primary/70">No results</small>
      ) : null}
    </section>
  );
}